{"version":3,"sources":["logo.svg","components/Footer.js","components/Header.js","pages/Login.js","pages/Register.js","pages/Error404.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","Header","useHistory","useState","AppBar","position","Toolbar","Box","to","Login","isLoading","setIsLoading","history","username","password","values","setValues","errors","setErrors","handleSubmit","event","a","preventDefault","isValid","newErrors","console","log","fetch","method","body","JSON","stringify","headers","response","dataJson","push","handleChange","target","name","value","noValidate","onSubmit","TextField","error","label","type","onChange","helperText","Button","color","variant","disabled","Register","Error404","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a6c5228.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {BottomNavigation} from '@material-ui/core';\r\nexport default function Footer() {\r\n    return (\r\n        <footer className= \"bg-light\">\r\n            <div>\r\n                Hello Footer <br></br>\r\n                Created by Eviatar Natan\r\n                <ul>\r\n                    <li> You can see my other projects here: <a href = \"https://github.com/eviatarnatan\"> GitHub</a></li>\r\n                    <li> My Linkedin: <a href = \"https://www.linkedin.com/in/eviatarnatan/\">Profile</a></li>\r\n                </ul>\r\n            </div>\r\n         </footer>\r\n    )\r\n\r\n    \r\n}","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Link } from 'react-router-dom';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport './Header.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nexport default function Header() {\r\n\tconst history = useHistory();\r\n\tconst [searchValue, setSearchValue] = useState('');\r\n\t\r\n\tconst navigateToDo = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\thistory.push(`/todo?search=${searchValue}`);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<AppBar position=\"static\" className=\"header\">\r\n        \t<Toolbar className=\"d-flex justify-content-between\">\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<Box className=\"box\">\r\n\t\t\t\t\t<ul className=\"flex-test\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active text-white\" to=\"/\">\r\n\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link text-white\" to=\"/register\">\r\n\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</nav>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t\t\r\n\t)\r\n}","import TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nexport default function Login() {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const history = useHistory();\r\n    const [values, setValues] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    })\r\n    const [errors, setErrors] = useState( {\r\n        username: null,\r\n        password: null\r\n    }\r\n    )\r\n\r\n    const handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n\r\n        let isValid = true;\r\n        let newErrors = {username: null, password: null}\r\n        if (!values.username) {\r\n            isValid = false;\r\n            newErrors = {\r\n                ...newErrors,\r\n                username: \"username is empty\"\r\n            }\r\n        }\r\n\r\n        if (!values.password) {\r\n            isValid = false;\r\n            newErrors = {\r\n                ...newErrors,\r\n                password: \"password is empty\"\r\n            }\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        if (!isValid) {\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        console.log(\"the sent values are: \" + values.username +\" \" + values.password);\r\n        const response = await fetch (\r\n            'http://localhost:8080/usersManager/login', \r\n            {\r\n                method:'POST',\r\n                body: JSON.stringify(values),\r\n                headers: {\r\n                    'Content-Type' : 'application/json',\r\n                    //'Access-Control-Allow-Origin': '*',\r\n                    //'Access-Control-Allow-Methods': 'POST',\r\n                    //'Access-Control-Allow-Headers': 'Content-Type'\r\n                }\r\n\r\n\r\n        })\r\n        const dataJson = await response;\r\n        console.log(dataJson);\r\n        setIsLoading(false);\r\n        history.push(\"/welcome\");\r\n\r\n    }\r\n\r\n    const handleChange = ( event) => {\r\n        setValues ( {\r\n            ...values,\r\n            [event.target.name]: event.target.value\r\n        } )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n        <form noValidate onSubmit={handleSubmit}>\r\n            <div>\r\n                <TextField\r\n                error={errors.username}\r\n                value={values.username}\r\n                label= {errors.username? \"Error\" : \"Enter your username\"}\r\n                type=\"username\"\r\n                name=\"username\"\r\n                onChange={handleChange}\r\n                helperText={errors.username}\r\n\r\n                    />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                error={errors.password}\r\n                value={values.password}\r\n                label= {errors.password? \"Error\" : \"Enter your password\"}\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n                helperText={errors.password}\r\n                />\r\n            </div>\r\n            <Button\r\n\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={isLoading}\r\n            type=\"submit\"\r\n            >\r\n                Submit\r\n            </Button>\r\n        </form>\r\n        </div>\r\n    )\r\n}","export default function Register() {\r\n    return (\r\n        <h1> register page</h1>\r\n    )\r\n}","\r\n\r\nexport default function Error404() {\r\n\r\n    return (\r\n        <h1> this is an error page</h1>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Login from './pages/Login';\nimport  { Route, Switch } from 'react-router-dom';\nimport Register from './pages/Register';\nimport Error404 from './pages/Error404';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Header/>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Login/>\n          </Route>\n          <Route path=\"/register\" exact>\n            <Register/>\n          </Route>\n          <Route>\n            <Error404/>\n          </Route>\n          \n        </Switch>\n      <Footer/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    \t<BrowserRouter>\n          <App /> \n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}