{"version":3,"sources":["components/Footer.js","userActions.js","components/Header.js","pages/Login.js","pages/Register.js","pages/Error404.js","noteActions.js","pages/notesMain.js","components/noteForm.js","App.js","reportWebVitals.js","Store.js","userReducer.js","noteReducer.js","index.js"],"names":["Footer","Box","className","href","setToken","newToken","type","payload","setUsername","username","token","logoutDispatch","a","console","log","fetch","method","headers","status","Header","useSelector","state","user","useDispatch","AppBar","position","Toolbar","to","onClick","logout","Login","useState","isLoading","setIsLoading","history","useHistory","dispatch","password","values","setValues","errors","setErrors","handleSubmit","event","preventDefault","isValid","newErrors","body","JSON","stringify","response","json","data","alert","push","handleChange","target","name","value","noValidate","onSubmit","TextField","error","label","onChange","helperText","Button","color","variant","disabled","Register","length","dataJson","path","Error404","setTitle","title","setBody","setPriority","priority","setColor","setReadFlag","readFlag","setId","id","setIcon","icon","NotesMain","notesList","setNotesList","noteDispatch","loadNotes","handleDeleteNote","noteItem","useEffect","map","Object","keys","handleEditNote","IconButton","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","NoteForm","param","classes","currentPath","window","location","pathname","note","handleAdd","handleUpdate","includes","inputProps","maxLength","multiline","rows","FormControl","InputLabel","htmlFor","Select","native","aria-label","component","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","labelPlacement","Checkbox","checked","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dd17115.chunk.js","sourcesContent":["import {Box} from '@material-ui/core';\r\nimport './Footer.css';\r\nexport default function Footer() {\r\n    return (\r\n        <Box className=\"flexbox\">\r\n            \r\n        <footer >\r\n            <div className=\"footer-distance\">\r\n                Created by Eviatar Natan\r\n                <ul>\r\n                    <li> You can see my other projects here: <a href = \"https://github.com/eviatarnatan\"> GitHub</a></li>\r\n                    <li> My Linkedin: <a href = \"https://www.linkedin.com/in/eviatarnatan/\">Profile</a></li>\r\n                </ul>\r\n            </div>\r\n            </footer>\r\n         </Box>\r\n    )\r\n\r\n    \r\n}","export default function setToken(newToken) {\r\n    return {\r\n        type: 'SET_TOKEN',\r\n        payload: newToken\r\n    }\r\n\r\n    }\r\n    export function setUsername(username) {\r\n        return{\r\n            type: 'SET_USERNAME',\r\n            payload: username\r\n        }\r\n    }","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\nimport Box from '@material-ui/core/Box';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport setToken, { setUsername } from '../userActions';\r\n\r\n\r\nexport async function logout(token, logoutDispatch) {\r\n\tconsole.log(\"token to sent for logout: \" + token);\r\n\tconst response = await fetch (\r\n\t\t'http://localhost:8080/usersManager/logout', \r\n\t\t{\r\n\t\t\tmethod:'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type' : 'application/json',\r\n\t\t\t\t'Authorization': `Bearer ${token}`\r\n\t\t\t\t//'Access-Control-Allow-Origin': '*',\r\n\t\t\t\t//'Access-Control-Allow-Methods': 'POST',\r\n\t\t\t\t//'Access-Control-Allow-Headers': 'Content-Type'\r\n\t\t\t}\r\n\r\n\t})\r\n\t//const data = response.json();\r\n\tif (response.status === 401) {\r\n\t\tconsole.log(\"unauthorized, there was an error with the token\");\r\n\t}\r\n\telse {\r\n\t\tconsole.log(\"logout success!\");\r\n\t\tlogoutDispatch(setToken(null));\r\n\t\tlogoutDispatch(setUsername(null));\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default function Header() {\r\n\tconst token = useSelector((state) => {\r\n        return state.user.token;\r\n    });\r\n\t\r\n\tconst logoutDispatch = useDispatch();\r\n\t\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div className= \"distance\">\r\n\t\t<AppBar position=\"static\" className=\"header-class\">\r\n        \t<Toolbar>\r\n\t\t\t\t<nav className=\"header-class\">\r\n\t\t\t\t\t<Box className=\"flex\" >\r\n\t\t\t\t\t<ul className=\"header-class\">\r\n\t\t\t\t\t\t<li className=\"header-list-item\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Link to={!token? \"/notes-app\" : \"/notes-app/notesMain\"} className=\"link\">\r\n\t\t\t\t\t\t\t\t<span>Home</span>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className= \"header-list-item\">\r\n\t\t\t\t\t\t\t<Link to=\"/notes-app/register\" className=\"link\">\r\n\t\t\t\t\t\t\t<span>Register</span>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className= \"header-list-item\">\r\n\t\t\t\t\t\t\t<Link to= \"/notes-app\" onClick={() => logout(token, logoutDispatch)} className=\"link\">\r\n\t\t\t\t\t\t\t{token?<span>Logout</span> : null}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</nav>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t\t</div>\r\n\t\t</header>\r\n\t\t\r\n\t)\r\n}","import TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport setToken, { setUsername } from '../userActions';\r\nexport default function Login() {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [values, setValues] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    })\r\n    const [errors, setErrors] = useState( {\r\n        username: null,\r\n        password: null\r\n    }\r\n    )\r\n\r\n    const handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n\r\n        let isValid = true;\r\n        let newErrors = {username: null, password: null}\r\n        if (!values.username) {\r\n            isValid = false;\r\n            newErrors = {\r\n                ...newErrors,\r\n                username: \"username is empty\"\r\n            }\r\n        }\r\n\r\n        if (!values.password) {\r\n            isValid = false;\r\n            newErrors = {\r\n                ...newErrors,\r\n                password: \"password is empty\"\r\n            }\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        if (!isValid) {\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        console.log(\"the sent values are: \" + values.username +\" \" + values.password);\r\n        const response = await fetch (\r\n            'http://localhost:8080/usersManager/login', \r\n            {\r\n                method:'POST',\r\n                body: JSON.stringify(values),\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                    //'Access-Control-Allow-Origin': '*',\r\n                    //'Access-Control-Allow-Methods': 'POST',\r\n                    //'Access-Control-Allow-Headers': 'Content-Type'\r\n                }\r\n\r\n\r\n        })\r\n\r\n        //console.log(\"let's print response before await \" + response);\r\n        //console.log(\"body is \" + response.body);\r\n        //console.log(\"headers are \" + response.headers);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setIsLoading(false);\r\n        //if unauthorized\r\n        if (response.status === 401) {\r\n            alert(\"Incorrect username/password. Please try again.\")\r\n            return;\r\n        }\r\n        console.log(data.username);\r\n\r\n        \r\n        //putting in the store the username and token\r\n        dispatch(setUsername(data.username))\r\n        dispatch(setToken(data.token))\r\n        history.push(\"/notes-app/notesMain\");\r\n\r\n    }\r\n\r\n    const handleChange = ( event) => {\r\n        setValues ( {\r\n            ...values,\r\n            [event.target.name]: event.target.value\r\n        } )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n        <form noValidate onSubmit={handleSubmit}>\r\n            <div>\r\n                <TextField\r\n                error={errors.username}\r\n                value={values.username}\r\n                label= {errors.username? \"Error\" : \"Enter your username\"}\r\n                type=\"text\"\r\n                name=\"username\"\r\n                onChange={handleChange}\r\n                helperText={errors.username}\r\n\r\n                    />\r\n            </div>\r\n            <div className=\"form-button-margin\">\r\n                <TextField \r\n                error={errors.password}\r\n                value={values.password}\r\n                label= {errors.password? \"Error\" : \"Enter your password\"}\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n                helperText={errors.password}\r\n                />\r\n            </div>\r\n            <div>\r\n            <Button \r\n\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={isLoading}\r\n            type=\"submit\"\r\n            >\r\n                Submit\r\n            </Button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}","import { Button, TextField } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function Register() {\r\n\r\n    const [isLoading, setIsLoading] = useState();\r\n    const history = useHistory();\r\n    const token = useSelector((state) => {\r\n        return state.user.token;\r\n    })\r\n    const [values, setValues] = useState( {\r\n        username: \"\",\r\n        password: \"\"\r\n    })\r\n    const [errors, setErrors] = useState( {\r\n        username: null,\r\n        password: null\r\n    })\r\n\r\n    const handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n\r\n        let isValid = true;\r\n        let newErrors = {username: null, password: null}\r\n        if (!values.username) {\r\n            isValid = false;\r\n            newErrors = {\r\n                ...newErrors,\r\n                username: \"username is empty\"\r\n            }\r\n        }\r\n\r\n        if (values.username.length >20) {\r\n            isValid = false;\r\n            newErrors = {\r\n                ...newErrors,\r\n                username: \"no more than 20 characters\"\r\n            }\r\n        }\r\n\r\n        if (!values.password) {\r\n            isValid = false;\r\n            newErrors = {\r\n                ...newErrors,\r\n                password: \"password is empty\"\r\n            }\r\n        }\r\n        console.log(values.password.length);\r\n        if (values.password.length <5) {\r\n            isValid = false;\r\n            newErrors = {\r\n                ...newErrors,\r\n                password: \"5+ characters are required\"\r\n            }\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        if (!isValid) {\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        console.log(\"the sent values are: \" + values.username +\" \" + values.password);\r\n        const response = await fetch (\r\n            'http://localhost:8080/usersManager/register', \r\n            {\r\n                method:'POST',\r\n                body: JSON.stringify(values),\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                    //'Access-Control-Allow-Origin': '*',\r\n                    //'Access-Control-Allow-Methods': 'POST',\r\n                    //'Access-Control-Allow-Headers': 'Content-Type'\r\n                }\r\n\r\n\r\n        })\r\n        console.log(\"let's print response before await \" + response);\r\n        const dataJson = await response.json;\r\n        setIsLoading(false);\r\n        //checking if there's a conflict\r\n        if (response.status === 409) {\r\n            console.log(\"it's a conflict \" + response.status);\r\n            alert(\"Username already exists, please choose another\");\r\n            return;\r\n        }\r\n        console.log(\"it's the response text \" + response.status);\r\n        console.log(\"let's print response after await \" + dataJson);\r\n        alert(\"Registered Successfuly!\");\r\n        //var token = dataJson.token;\r\n        //console.log(\"let's try to pring the token \" + token);\r\n        const path = token? \"/notes-app/notesMain\" : \"/notes-app\"\r\n        history.push(path);\r\n\r\n    }\r\n\r\n    const handleChange = ( event) => {\r\n        setValues ( {\r\n            ...values,\r\n            [event.target.name]: event.target.value\r\n        } )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <h1> Register</h1>\r\n        <form noValidate onSubmit={handleSubmit}>\r\n        <div>\r\n            <TextField\r\n            error={errors.username}\r\n            value={values.username}\r\n            label= {errors.username? \"Error\" : \"Choose your username\"}\r\n            type=\"username\"\r\n            name=\"username\"\r\n            onChange={handleChange}\r\n            helperText={errors.username}\r\n\r\n                />\r\n        </div>\r\n        <div className=\"form-button-margin\">\r\n            <TextField\r\n            error={errors.password}\r\n            value={values.password}\r\n            label= {errors.password? \"Error\" : \"Choose your password\"}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            helperText={errors.password}\r\n            />\r\n        </div>\r\n        <Button\r\n\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        disabled={isLoading}\r\n        type=\"submit\"\r\n        >\r\n            Submit\r\n        </Button>\r\n    </form>\r\n    </div>\r\n    )\r\n}","\r\n\r\nexport default function Error404() {\r\n\r\n    return (\r\n        <h1> Error, this page does not exist</h1>\r\n    )\r\n}","export default function setTitle(title) {\r\n    return {\r\n        type: \"SET_TITLE\",\r\n        payload: title\r\n    }\r\n}\r\nexport function setBody(body) {\r\n    return {\r\n        type: \"SET_BODY\",\r\n        payload: body\r\n    }\r\n}\r\nexport function setPriority(priority) {\r\n    return {\r\n        type: \"SET_PRIORITY\",\r\n        payload: priority\r\n    }\r\n}\r\nexport function setColor(color) {\r\n    return {\r\n        type: \"SET_COLOR\",\r\n        payload: color\r\n    }\r\n}\r\nexport function setReadFlag(readFlag) {\r\n    return {\r\n        type: \"SET_READ_FLAG\",\r\n        payload: readFlag\r\n    }\r\n}\r\nexport function setId(id) {\r\n    return {\r\n        type: \"SET_ID\",\r\n        payload: id\r\n    }\r\n}\r\nexport function setIcon(icon) {\r\n    return {\r\n        type: \"SET_ICON\",\r\n        payload: icon\r\n    }\r\n}","import { useDispatch, useSelector } from \"react-redux\"\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Button, IconButton, ListItem, makeStyles } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport './formStyle.css';\r\nimport { setBody, setColor, setIcon, setId, setReadFlag, setPriority } from \"../noteActions\";\r\nimport setTitle from \"../noteActions\";\r\n\r\n\r\nexport default function NotesMain() {\r\n    \r\n    //getting the token from the reducer\r\n    const [notesList, setNotesList] = useState([])\r\n    const history = useHistory();\r\n    const noteDispatch = useDispatch();\r\n    const token = useSelector((state) => {\r\n        return state.user.token;\r\n    })\r\n    const username = useSelector((state) => {\r\n      return state.user.username;\r\n    })\r\n    //const [notes, setNotes] = useState();\r\n    //for fetching the user's notes\r\n    //\"http://localhost:8080/notesManager/getnotes\"\r\n    const loadNotes = async () => {\r\n        const response = await fetch (\r\n            \"http://localhost:8080/notesManager/getnotes\" , {\r\n            method:'GET',\r\n            //body: JSON.stringify(values),\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n                //'Access-Control-Allow-Origin': '*',\r\n                //'Access-Control-Allow-Methods': 'POST',\r\n                //'Access-Control-Allow-Headers': 'Content-Type'\r\n            }\r\n        }\r\n        );\r\n        const notesList = await response.json();\r\n        console.log(notesList[0])\r\n        //console.log(\"Notes title is: \" + notesList[0].title);\r\n        //console.log(\"Notes title is: \" + notesList[1].title);\r\n        setNotesList(notesList);\r\n    }\r\n    //for deleting a note\r\n    //\"http://localhost:8080/notesManager/deleteNote\"\r\n    //const loadNotes = async ()\r\n\r\n\r\n    const handleDeleteNote = async(noteItem) => {\r\n        console.log(\"I'm inside delete note\")\r\n        console.log(noteItem);\r\n        await fetch (\r\n            \"http://localhost:8080/notesManager/delete\", {\r\n            method:'DELETE',\r\n            body: JSON.stringify(noteItem),\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }\r\n        //extra for response?\r\n\r\n        )\r\n        loadNotes();\r\n    }\r\n\r\n    //see later if you need event\r\n    const handleAddNote = () => {\r\n      console.log(\"Add me!\");\r\n      //removing note details, to be able to add a new note\r\n      noteDispatch(setId(\"\"));\r\n      noteDispatch(setTitle(\"\"));\r\n      noteDispatch(setBody(\"\"));\r\n      noteDispatch(setPriority(\"\"));\r\n      noteDispatch(setColor(\"\"));\r\n      noteDispatch(setReadFlag(false));\r\n      noteDispatch(setIcon(\"\"));\r\n        history.push(\"/notes-app/notesMain/addNote\");\r\n    }\r\n\r\n    const handleEditNote = (noteItem) => {\r\n      console.log(\"Edit me!\");\r\n      //saving to state note details, to be able to display them when editing the note\r\n      noteDispatch(setId(noteItem.id))\r\n      noteDispatch(setTitle(noteItem.title));\r\n      noteDispatch(setBody(noteItem.body));\r\n      noteDispatch(setPriority(noteItem.priority));\r\n      noteDispatch(setColor(noteItem.color));\r\n      noteDispatch(setReadFlag(noteItem.readFlag));\r\n      noteDispatch(setIcon(noteItem.icon));\r\n      console.log(\"before going to edit, read status is: \" + Object.keys(noteItem));\r\n      history.push(\"/notes-app/notesMain/editNote\");\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!token) return;\r\n            loadNotes();\r\n        },\r\n        [token, ]\r\n    )\r\n    return (\r\n      <div>\r\n        <h1> welcome, {username}</h1>\r\n      \r\n        <div className=\"list-class\">\r\n            <ul className=\"list-class\">\r\n            {\r\n                notesList.map(function(noteItem) {\r\n                    return (\r\n                        <div className=\"div-distance\">\r\n                        <li>\r\n                          <Button onClick={() => {handleEditNote(noteItem)}}\r\n                          >\r\n                        <h3 className=\"button-change\">\r\n                            {\r\n                                noteItem.title\r\n                            }\r\n                        </h3>\r\n                        </Button>\r\n                        <IconButton onClick={() => {handleDeleteNote(noteItem)}}>\r\n                            <DeleteIcon></DeleteIcon>\r\n                        </IconButton>      \r\n                        </li>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            </ul> \r\n            <div className=\"add-class\">\r\n            <IconButton\r\n             onClick = {() => {handleAddNote()}}\r\n             color= \"primary\"\r\n             >\r\n            \r\n\r\n            <AddIcon\r\n            >\r\n            </AddIcon>\r\n            </IconButton>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}","import { Button, Checkbox, FormControl, FormControlLabel, FormLabel, InputLabel, makeStyles, Radio, RadioGroup, Select, TextField } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\";\r\nimport '../pages/formStyle.css';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function NoteForm(param) {\r\n    const classes = useStyles();\r\n\r\n    const token = useSelector((state) => {\r\n        return state.user.token;\r\n    });\r\n    const currentPath = window.location.pathname;\r\n    const title = useSelector((state) => {\r\n        console.log(\"Hi, I'm inside\")\r\n\t\treturn state.note.title;\r\n\t})\r\n    const body = useSelector((state) => {\r\n\t\treturn state.note.body;\r\n\t})\r\n    const priority = useSelector((state) => {\r\n\t\treturn state.note.priority;\r\n\t})\r\n    const color = useSelector((state) => {\r\n        console.log(\"blabla color\")\r\n\t\treturn state.note.color;\r\n\t})\r\n    const readFlag = useSelector((state) => {\r\n\t\treturn state.note.readFlag;\r\n\t})\r\n\r\n    const id = useSelector((state) => {\r\n        return state.note.id;\r\n    })\r\n    const icon = useSelector((state) => {\r\n        return state.note.icon;\r\n    })\r\n\r\n    const history = useHistory();\r\n    //end for testing\r\n\r\n\r\n    const [values, setValues] = useState({\r\n        id: id,\r\n        title: title,\r\n        body: body,\r\n        color: color,\r\n        priority: priority,\r\n        readFlag: readFlag,\r\n        icon: icon\r\n    })\r\n\r\n\r\n\r\n    const [errors, setErrors] = useState({\r\n        title: null,\r\n        body: null\r\n    })\r\n\r\n    //console.log(\"The color is \" + values.color);\r\n    console.log(\"the icon is \" + values.icon);\r\n    console.log(\"the id is \" + values.id);\r\n    console.log(\"the title is \" + values.title);\r\n    console.log(\"the body is \" + values.body);\r\n    console.log(\"the color is \" + values.color);\r\n    console.log(\"the priority is \" + values.priority);\r\n    console.log(\"the read status is \" + values.readFlag);\r\n    const handleChange = (event) => {\r\n        setValues({\r\n            ...values,\r\n            [event.target.name]: event.target.value\r\n        })\r\n        console.log(\"am i handling this icon change?:\" + values.icon);\r\n        console.log(\"am i handling this read change?:\" + values.readFlag);\r\n    }\r\n    const handleCheckChange = (event) => {\r\n        setValues({\r\n           ...values,\r\n            [event.target.name]: event.target.checked\r\n        })\r\n    }\r\n\r\n    const handleAdd = async(event) => {\r\n        event.preventDefault();\r\n        console.log(\"we are going to add\");\r\n        let isValid = true;\r\n        let newErrors = {title: null, body: null};\r\n        if(!values.title) {\r\n            isValid = false;\r\n            newErrors = {\r\n                ...newErrors,\r\n                title: \"Empty title\"\r\n            }\r\n        }\r\n        setErrors(newErrors);\r\n        if(!isValid) {\r\n            return;\r\n        }\r\n        console.log(\"token before sending is: \" + token)\r\n        \r\n\r\n        console.log(\"the sent values are: \" + values.title + values.body);\r\n        const response = await fetch (\r\n            'http://localhost:8080/notesManager/add', \r\n            {\r\n                method:'POST',\r\n                body: JSON.stringify(values),\r\n                headers: {\r\n                    'Content-Type' : 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                    //'Access-Control-Allow-Origin': '*',\r\n                    //'Access-Control-Allow-Methods': 'POST',\r\n                    //'Access-Control-Allow-Headers': 'Content-Type'\r\n                }\r\n\r\n\r\n        })\r\n        //getting back to the main notes page\r\n        //goback leaves trace, so used push instead.\r\n        history.push(\"../notesMain\");\r\n\r\n    }\r\n\r\n\r\n    const handleUpdate = async(event) => {\r\n        event.preventDefault();\r\n        console.log(\"the values before update are: \" + Object.values(values));\r\n        console.log(\"We are going to update\");\r\n        console.log(values.readFlag);\r\n        let isValid = true;\r\n        let newErrors = {title: null, body: null};\r\n        if(!values.title) {\r\n            isValid = false;\r\n            newErrors = {\r\n                ...newErrors,\r\n                title: \"Empty title\"\r\n            }\r\n        }\r\n        setErrors(newErrors);\r\n        if(!isValid) {\r\n            return;\r\n        }\r\n\r\n        const response = await fetch (\r\n            'http://localhost:8080/notesManager/update', \r\n            {\r\n                method:'PUT',\r\n                body: JSON.stringify(values),\r\n                headers: {\r\n                    'Content-Type' : 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                    //'Access-Control-Allow-Origin': '*',\r\n                    //'Access-Control-Allow-Methods': 'POST',\r\n                    //'Access-Control-Allow-Headers': 'Content-Type'\r\n                }\r\n\r\n\r\n        })\r\n\r\n        history.push(\"../notesMain\");\r\n\r\n    }\r\n\r\n    //cost[readit, setRead] = useState(\"false\")\r\n    return (\r\n\r\n        <div>\r\n            <form noValidate onSubmit={currentPath.includes(\"addNote\")? handleAdd : handleUpdate} >\r\n                <div className=\"div-distance\">\r\n                    <TextField className=\"form\"\r\n                    error={errors.title}\r\n                    value={values.title}\r\n                    label= {errors.title? \"Error\" : \"Title\"}\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    helperText={errors.title}\r\n                    inputProps={{maxLength: 40}}\r\n                    variant=\"outlined\"\r\n\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TextField className = \"form\"\r\n                    error={errors.body}\r\n                    value={values.body}\r\n                    label = {errors.body? \"Error\": \"Body\"}\r\n                    helperText={errors.body}\r\n                    onChange={handleChange}\r\n                    type=\"text\"\r\n                    name=\"body\"\r\n                    multiline \r\n                    rows=\"13\"\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FormControl className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"color-native-simple\">Color</InputLabel>\r\n                    <Select\r\n                    native\r\n                    value={values.color}\r\n                    onChange={handleChange}\r\n                    inputProps={{\r\n                        name: 'color',\r\n                        id: 'color-native-simple',\r\n                    }}\r\n                    >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={\"Green\"}>Green</option>\r\n          <option value={\"Yellow\"}>Yellow</option>\r\n          <option value={\"Red\"}>Red</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"priority-native-helper\">Priority</InputLabel>\r\n        <Select\r\n            native\r\n          value={values.priority}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'priority',\r\n            id: 'priority-native-helper',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value={1}>1</option>\r\n          <option value={2}>2</option>\r\n          <option value={3}>3</option>\r\n          <option value={4}>4</option>\r\n          <option value={5}>5</option>\r\n        </Select>\r\n      </FormControl>\r\n            </div>\r\n\r\n\r\n            <div>\r\n            <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Icon</FormLabel>\r\n      <RadioGroup row aria-label=\"position\" name=\"icon\" value= {values.icon} onChange={handleChange}>\r\n        <FormControlLabel\r\n          value=\"call\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={<CallIcon></CallIcon>}\r\n          labelPlacement=\"start\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"place\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={<PlaceIcon></PlaceIcon>}\r\n          labelPlacement=\"start\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"highPriority\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={<PriorityHighIcon></PriorityHighIcon>}\r\n          labelPlacement=\"start\"\r\n        />\r\n               <FormControlLabel\r\n          value=\"schedule\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={<ScheduleIcon></ScheduleIcon>}\r\n          labelPlacement=\"start\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"musicNote\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={<MusicNoteIcon></MusicNoteIcon>}\r\n          labelPlacement=\"start\"\r\n        />\r\n      </RadioGroup>\r\n    </FormControl>\r\n\r\n            </div>\r\n\r\n            <div>\r\n                Read\r\n                <Checkbox value={values.readFlag}\r\n                color=\"primary\"\r\n                //value={values.isRead}\r\n                onChange={handleCheckChange}\r\n                label=\"Read\"\r\n                checked= {values.readFlag} //{values.isRead? true: false}\r\n                inputProps = {{\r\n                    name: \"readFlag\",\r\n                    id: \"readFlag\"\r\n                }}\r\n                >\r\n                    \r\n                </Checkbox>\r\n            </div>\r\n\r\n            \r\n            <div>\r\n                <Button className=\"form\"\r\n                color= \"primary\"\r\n                variant = \"contained\"\r\n                type = \"submit\"\r\n                >\r\n                    Save\r\n                </Button>\r\n            </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Login from './pages/Login';\nimport  { Redirect, Route, Switch } from 'react-router-dom';\nimport Register from './pages/Register';\nimport Error404 from './pages/Error404';\nimport NotesMain from './pages/notesMain';\nimport NoteForm from './components/noteForm';\nimport { useSelector } from 'react-redux';\nfunction App() {\n\n  const token = useSelector((state) => {\n    return state.user.token;\n})\n  return (\n    <div className=\"App\">\n      <div>\n        <Header/>\n        <Switch>\n          <Route path=\"/notes-app\" exact>\n            <Login/>\n          </Route>\n          <Route path=\"/notes-app/register\" exact>\n            <Register/>\n          </Route>\n          <Route path=\"/notes-app/notesMain\" exact>\n            {token? <NotesMain/> : <Redirect to=\"/notes-app\"/>}\n          </Route>\n          <Route path=\"/notes-app/notesMain/addNote\" exact>\n            {token? <NoteForm/> : <Redirect to=\"/notes-app\" /> }\n          </Route>\n          <Route path=\"/notes-app/notesMain/editNote\" exact >\n            {token? <NoteForm/> : <Redirect to=\"/notes-app\" /> } \n          </Route>\n          <Route>\n            <Error404/>\n          </Route>\n          \n        </Switch>\n      <Footer/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport userReducer from './userReducer';\r\nimport noteReducer from './noteReducer';\r\n\r\n//returns store of redux\r\nconst store = configureStore({\r\n    reducer: {\r\n        user: userReducer,\r\n        note: noteReducer\r\n    }\r\n\r\n    //state0\r\n});\r\n\r\nexport default store;","export default function userReducer(state = {\r\n    username: null,\r\n    token: null\r\n    }, action) {\r\n\r\n        switch(action.type) {\r\n            case 'SET_TOKEN':\r\n                return {\r\n                    ...state,\r\n                    token: action.payload\r\n                }\r\n            case 'SET_USERNAME':\r\n                return {\r\n                    ...state,\r\n                    username: action.payload\r\n                }\r\n            default: \r\n                return state;\r\n        }\r\n\r\n\r\n}","export default function noteReducer(state = {\r\n    id: null,\r\n    title: null,\r\n    body: null,\r\n    priority: null,\r\n    color: null,\r\n    readFlag: null,\r\n    icon: null\r\n}, action) {\r\n    switch(action.type) {\r\n\r\n        case \"SET_ID\":\r\n            return {\r\n                ...state,\r\n                id: action.payload\r\n            }\r\n        case \"SET_TITLE\": \r\n            return {\r\n            ...state,\r\n            title: action.payload\r\n            }\r\n        case \"SET_BODY\": \r\n            return {\r\n            ...state,\r\n            body: action.payload\r\n            }\r\n        case \"SET_PRIORITY\": \r\n            return {\r\n            ...state,\r\n            priority: action.payload\r\n            }\r\n        case \"SET_COLOR\": \r\n            return {\r\n            ...state,\r\n            color: action.payload\r\n            }\r\n        case \"SET_READ_FLAG\": \r\n            return {\r\n            ...state,\r\n            readFlag: action.payload\r\n            }\r\n        case \"SET_ICON\":\r\n            return {\r\n            ...state,\r\n            icon: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    \t<BrowserRouter>\n      <Provider store={store}>\n          <App /> \n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}